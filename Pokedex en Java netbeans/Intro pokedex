import java.awt.Color;
import java.awt.Image;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JLabel;
import javazoom.jl.decoder.JavaLayerException;
import javazoom.jl.player.Player;

/**
 *
 * @author Pc
 */
public class inicio extends javax.swing.JFrame {

    /*variables globales*/
    private ImageIcon fondo1;
    private Icon icono;
    private ImageIcon sonido1;
    private Icon icono1;
    private Player pok;
    private Thread musicThread;
    private boolean suena = false;
    private ImageIcon titulo1;
    private Icon icono2;

    /*constructor */
    public inicio() {
        initComponents();

        /*
        Aqui estoy llamando todas las imagenes que use y el sonido de fondo
        */
        this.setLocationRelativeTo(this);
        this.fondo(fondo, "src/main/resources/imagenes/pokefondo.jpg");
        this.sonido(sonido, "src/main/resources/imagenes/sonido.png");
        this.titulo(titulo, "src/main/resources/imagenes/titulo.png");
        continuar.setBackground(new Color(0,0,0,0));
        sonido.setBackground(new Color(0,0,0,0));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        sonido = new javax.swing.JButton();
        titulo = new javax.swing.JLabel();
        continuar = new javax.swing.JButton();
        fondo = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        sonido.setBackground(new java.awt.Color(112, 191, 255));
        sonido.setBorder(null);
        sonido.setBorderPainted(false);
        sonido.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sonidoActionPerformed(evt);
            }
        });
        getContentPane().add(sonido, new org.netbeans.lib.awtextra.AbsoluteConstraints(1125, 20, 80, 70));
        getContentPane().add(titulo, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 0, 780, 440));

        continuar.setBackground(new java.awt.Color(60, 63, 65));
        continuar.setFont(new java.awt.Font("Unispace", 0, 36)); // NOI18N
        continuar.setForeground(new java.awt.Color(0, 0, 0));
        continuar.setText("Continuar");
        continuar.setBorderPainted(false);
        continuar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                continuarActionPerformed(evt);
            }
        });
        getContentPane().add(continuar, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 460, 300, 110));
        getContentPane().add(fondo, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1230, 720));

        pack();
    }// </editor-fold>                        

    /*
    Este es el boton que activa y desactiva la musica no cambiar nada
    */
    private void sonidoActionPerformed(java.awt.event.ActionEvent evt) {                                       
        if (!suena) {
            musicapok("src/main/resources/musica/musica intro.mp3");
        } else {
            para();
        }

    }                                      


    /*
    Esto es para poder pasar del Jframe del inico a la quequidex no cambiar nada
    */
    private void continuarActionPerformed(java.awt.event.ActionEvent evt) {                                          
        QueQuidex quequi = new QueQuidex();
        quequi.setin(this);
        quequi.setVisible(true);
        this.setVisible(false);
    }                                         

    /*
    Estos dos metodos musicapok y para, musicapok es para crear un hilo para poder iniciar la musica
    sin que haya algun error y para es para parar la musica 
    */
    public void musicapok(String music) {
        musicThread = new Thread(() -> {
            try {
                FileInputStream poke = new FileInputStream(music);
                pok = new Player(poke);
                suena = true;
                pok.play();
                suena = false;
            } catch (FileNotFoundException | JavaLayerException e) {
                System.out.println(e);
            }
        });
        musicThread.start();
    }

    public void para() {
        try {
            if (pok != null) {
                pok.close(); // Esto detiene la música
            }
            if (musicThread != null && musicThread.isAlive()) {
                musicThread.interrupt(); // Intenta detener el hilo (opcional)
            }
        } catch (Exception e) {
            System.out.println(e.getMessage());
        }
        suena = false;
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(inicio.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(inicio.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(inicio.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(inicio.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new inicio().setVisible(true);
            }
        });
    }

    /*
    Estos tres metodos son para llamar las imagenes y ajustarlas al tamaño de los labels que puse sin que se deformen
    no cambiar nada
    */
    private void fondo(JLabel fondo, String ruta) {
        this.fondo1 = new ImageIcon(ruta);
        this.icono = new ImageIcon(this.fondo1.getImage().getScaledInstance(fondo.getWidth(), fondo.getHeight(), Image.SCALE_DEFAULT));

        fondo.setIcon(this.icono);
        this.repaint();
    }

    private void sonido(JButton sonido, String ruta) {
        this.sonido1 = new ImageIcon(ruta);
        this.icono1 = new ImageIcon(this.sonido1.getImage().getScaledInstance(sonido.getWidth(), sonido.getHeight(), Image.SCALE_DEFAULT));

        sonido.setIcon(this.icono1);
        this.repaint();
    }

    private void titulo(JLabel titulo, String ruta) {
        this.titulo1 = new ImageIcon(ruta);
        this.icono2 = new ImageIcon(this.titulo1.getImage().getScaledInstance(titulo.getWidth(), titulo.getHeight(), Image.SCALE_DEFAULT));

        titulo.setIcon(this.icono2);
        this.repaint();
    }

    // Variables declaration - do not modify                     
    private javax.swing.JButton continuar;
    private javax.swing.JLabel fondo;
    private javax.swing.JButton sonido;
    private javax.swing.JLabel titulo;
    // End of variables declaration                   
}
